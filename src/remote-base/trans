import React, {useState} from 'react';
import {View, TextInput, FlatList, Text} from 'react-native';
import Styles from '../styles';
import Button from './base/Button';
import Table from './base/Table';
import TableRow from './base/TableRow';
import TableData from './base/TableData';
import TableHeader from './base/TableHeader';
import TableBody from './base/TableBody';

function TransactionTable({txns}) {
  const [tansData, setTansData] = useState(txns);
  const [selectedDate, setSelectedDate] = useState();

  const sort = () => {
    const compare = (a, b) => {
      const amountA = Number(a.amount);
      const amountB = Number(b.amount);

      let comparison = 0;
      if (amountA > amountB) {
        comparison = 1;
      } else if (amountA < amountB) {
        comparison = -1;
      }
      return comparison;
    };
    tansData.sort(compare);
  };

  const listTransaction = (transac, index) => {
    return (
      <TableRow key={index}>
        <TableData>{transac.date}</TableData>
        <TableData flex={3.5}>{transac.description}</TableData>
        <TableData>{transac.type === 1 ? 'Debit' : 'Credit'}</TableData>
        <TableData>{transac.amount}</TableData>
        <TableData>{transac.balance}</TableData>
      </TableRow>
    );
  };

  const filterByDate = () => {
    if (!selectedDate) {
      setTansData(txns);
      return;
    }

    const newTrans = txns.filter(function (elemet) {
      if (elemet.date === selectedDate) {
        return element;
      }
    });
    setTansData(newTrans);
  };

  return (
    <View
      style={[Styles.layout_column, Styles.align_items_center, Styles.mt_50]}>
      <View
        style={[
          Styles.layout_row,
          Styles.align_items_center,
          Styles.justify_content_center,
        ]}>
        <Text style={[Styles.mr_10]}>Transaction Date</Text>
        <TextInput
          style={[Styles.px_10, Styles.input_large]}
          onChangeText={text => setSelectedDate(text)}
          value={selectedDate}
          testID="app-input"
          placeholder="YYYY-MM-DD"
        />
        <View>
          <Button
            style={[Styles.mx_8, Styles.button, Styles.button_small]}
            testID="submit-button"
            onPress={filterByDate}>
            Filter
          </Button>
        </View>
      </View>

      <View style={[Styles.card, Styles.mt_50, {minWidth: '65%'}]}>
        <Table>
          <View>
            <TableRow>
              <TableHeader>Date</TableHeader>
              <TableHeader flex={3.5}>Description</TableHeader>
              <TableHeader>Type</TableHeader>
              <TableHeader
                testID="amount"
                onPress={sort}
                style={[Styles.table_thead_tr_th_sortable]}>
                Amount ($)
              </TableHeader>
              <TableHeader>Available Balance</TableHeader>
            </TableRow>
            <TableBody testID="records-body">
              {txns.length !== 0 ? (
                <FlatList
                  data={tansData}
                  renderItem={({item, index}) => listTransaction(item, index)}
                  keyExtractor={(item, index) => index.id.toString()}
                />
              ) : null}
              {/* <TableRow key="">
                                <TableData>date</TableData>
                                <TableData flex={3.5}>description</TableData>
                                <TableData>type === 1 ? 'Debit' : 'Credit'</TableData>
                                <TableData>amount</TableData>
                                <TableData>balance</TableData>
                            </TableRow> */}
            </TableBody>
          </View>
        </Table>
      </View>
    </View>
  );
}

export default TransactionTable;
